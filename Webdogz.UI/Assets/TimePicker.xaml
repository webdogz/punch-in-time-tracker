<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Webdogz.UI.Controls">

    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" Margin="0,0,3,0" />
    </DataTemplate>

    <Style x:Key="TimePickerModernToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True" Background="Transparent" Width="20">
                        <Ellipse x:Name="ellipse"
                                 StrokeThickness="0"
                                 VerticalAlignment="Stretch" />
                        <Path x:Name="icon" Width="12" Height="12"
                              Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"
                              Data="{DynamicResource ClockGeometry}"
                              Fill="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextHover}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextPressed}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderPressed}" />
                            <Setter TargetName="ellipse" Property="Fill" Value="{DynamicResource ModernButtonIconBackgroundPressed}" />
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource ModernButtonIconForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderDisabled}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource Accent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =============================================================================== -->
    <!-- TimePicker                                                                      -->
    <!-- =============================================================================== -->

    <Style TargetType="{x:Type local:TimePicker}">
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TimePicker}">
                    <Border>
                        <Grid>
                            <Grid x:Name="_timePickerContainer">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <local:DateTimeUpDown x:Name="PART_TimeUpDown" 
                                                      BorderThickness="1"
                                                      Background="{TemplateBinding Background}"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      ContextMenu="{TemplateBinding ContextMenu}"
                                                      AllowSpin="{TemplateBinding AllowSpin}"
                                                      TabIndex="{TemplateBinding TabIndex}"
                                                      Padding="{TemplateBinding Padding}"
                                                      Format="{TemplateBinding Format, Converter={StaticResource TimeFormatToDateTimeFormatConverter}}"
                                                      FormatString="{TemplateBinding FormatString}"
                                                      ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}"
                                                      Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Minimum="{Binding Minimum, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Maximum="{Binding Maximum, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ClipValueToMinMax="{Binding ClipValueToMinMax, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Watermark="{TemplateBinding Watermark}"
                                                      WatermarkTemplate="{TemplateBinding WatermarkTemplate}"
                                                      TextAlignment="{TemplateBinding TextAlignment}"/>
                                <ToggleButton x:Name="_timePickerToggleButton"
                                              Grid.Column="1" Margin="3,1,1,1"
                                              Focusable="False"
                                              IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource TimePickerModernToggleButtonStyle}"
                                              IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}" />
                            </Grid>
                            <Popup x:Name="PART_Popup"
                                   IsOpen="{Binding IsChecked, ElementName=_timePickerToggleButton}"
                                   StaysOpen="False"
                                   Placement="Bottom"
                                   HorizontalOffset="-1"
                                   VerticalOffset="1">
                                <Grid>
                                    <Border BorderBrush="{DynamicResource Accent}" BorderThickness="1,0,1,1"
                                            Background="{DynamicResource InputBackground}">
                                        <ListBox x:Name="PART_TimeListItems"
                                                 Width="{Binding ActualWidth, ElementName=_timePickerContainer}"
                                                 Height="130"
                                                 DisplayMemberPath="Display" />
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TimeUpDown" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TimeUpDown}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
